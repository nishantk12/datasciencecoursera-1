find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(devtools)
find_rtools()
find.package("test")
exit
exit()
quit()
find.package("test")
exit()
quit()
install.packages("swirl")
load(swirl)
library(swirl)
install.packages("swirl")
library(swirl)
exit
quit()
install.packages("devtools")
library(swirl)
install_from_swirl("R Programming")
swirl()
swirl
swirl()
5+7
x<-5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
sqrt(z-1)
sqrt((z-1))
mysqrt <- sqrt(z-1)
mysqrt = sqrt(z-1)
my_sqrt = sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div = z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
5+7
x<-5+7
x
x-3
y <- x-3
y
z<-c(1.1,9,3.14)
?
c
z
c(z,555,z)
z*2+100
my_sqrt = sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args()
args(list.files)
old.dir<-getwd()
dir.create(testdir)
?dir.create
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
dir()
files.exists()
files.exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
pwd
pwd()
file.path("mytest3.R")
?file.path
file.path("folder1","folder2")
?dir.create
dir.create("testdir2","testdir3",recursive = TRUE)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
getwd()
setwd(old.dir)
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
c(0.5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf <- num_vect[num_vect<1]
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name<-c(my_char,"YK Park")
my_name
paste(my_name, collapse = " ")
paste("Hello","world!",sep=" ")
c("X","Y","Z")
paste(c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
vect("foo")
vect["foo"]
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
?identical
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dims(my_vector)
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(data=1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<-cnames
my_data
add2<-function(x,y)
{
x+y
}
add2(3,5)
above <-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above(x,5)
above <-function(x,n=10){
use<-x>n
x[use]
}
above(x)
columnmean<-function(y){
nc<-ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
columnmean(airquality)
source('~/.active-rstudio-document', echo=TRUE)
columnmean<-function(y, removeNA=TRUE){
nc<-ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
source('~/.active-rstudio-document')
mydata <-rnorm(100)
sd(mydata)
sd(x=mydata)
sd(x=mydata, na.rm=FALSE)
args(paste)
paste("a","b")
paste("a","b",se=":")
lm <- function(x) {x*x}
lm
search()
search()
cube <- function(x,n)
{x^3}
cube(3)
x<-1:10
if (x>5){}
if (x>5){x<-0}
f<-function(x){g<-function(y){y+z}z<-4}
View(cube)
View(cube)
source('C:/Users/ypark/dataScience/datasciencecoursera/function.R')
z<-10
f(3)
x<-5
y<-if(x<3){}
y<-if(x<3){ NA}else{10}
y
?cbind
cbind(1,3)
cbind(1,3,3)
load(Swirl)
load(swirl)
library(swirl)
swirl()
8
swirl()
swirl()
swirl()
swirl()
pwd
getwd
getwd()
quit()
library(swirl)
swirl()
quit
getwd()
library(swirl)
getwd()
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE,F,F)
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
swril()
swirl()
getwd
getwd()
setwd("C:\Users\ypark\dataScience\datasciencecoursera")
setwd("C:/Users/ypark/dataScience/datasciencecoursera")
getwd()
read.csv("specdata/1.csv")
read.csv("specdata/001.csv")
data.frame(read.csv("specdata/001.csv"))
?data.frame
ls()
data1<-data.frame(read.csv("specdata/001.csv"))
data1
length(data1)
nrow(data1)
data2<-data.frame(read.csv("specdata/002.csv"))
data3 <-data1+data2
total <- rbind(data1,data2)
total
View(data1)
View(data1)
View(total)
ls()
rm(ls())
rm(list=ls())
sprintf("%04d",1)
sprintf("%03d",1)
filename <- sprintf("%03d",1)
filename <- sprintf("%03d.csv",1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pollutantmean("specdata","test",1)
data.frame(read.csv("specdata/001.csv"))
data1
data1<-data.frame(read.csv("specdata/001.csv"))
View(data1)
data2<-data.frame()
rbind(data2,data1)
totalData<-rbind(data2,data1)
pollutantmean("specdata","test",1)
pollutantmean("specdata","test",1)
pollutantmean("specdata","test",1:1)
pollutantmean("specdata","test",1:10)
pollutantmean("specdata","test",1)
pollutantmean("specdata","test",1)
test<-pollutantmean("specdata","test",1)
for (i in 1) {print(i)}
for (i in 1) {print(2)}
clear(ls())
rm(ls())
rm(list=ls())
test<-pollutantmean("specdata","test",1)
source('~/.active-rstudio-document')
test<-pollutantmean("specdata","test",1)
test<-pollutantmean("specdata","test",1)
test<-pollutantmean("specdata","test",1)
test<-pollutantmean("specdata","test",1:2)
test["sulfate"]
mean(test["sulfate"],na.rm=TRUE)
mean(test["sulfate"])
mean(test["sulfate"],na.rm = T)
?mean
View(test)
test["sulfate"]
x<-test["sulfate"]
mean(x,na.rm=TRUE)
class(x)
test[["sulfate"]]
x<-test[["sulfate"]]
mean(x,na.rm=TRUE)
source('C:/Users/ypark/dataScience/datasciencecoursera/week2.R')
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","sulfate",34)
pollutantmean("specdata","nitrate")
x<-data.frame(read.csv("specdata/001.csv"))
x
complete.cases(x)
count<-complete.cases(x)
sum(count)
source('C:/Users/ypark/dataScience/datasciencecoursera/complete.R')
complete("specdata",1)
data.frame("id","nobs")
test<-data.frame("id","nobs")
test<-data.frame("id"=integer(0),"nobs"=integer(0))
test
test$id = rbind(test$id,1)
test$id[1]<-1
test$id
test
test<-rbind(test,data.frame(id=1,nobs=17))
test
source('C:/Users/ypark/dataScience/datasciencecoursera/complete.R')
complete("specdata",1)
complete("specdata",1:2)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
cc
print(cc$nobs)
cc <- complete("specdata", 54)
cc
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc
x
source('C:/Users/ypark/dataScience/datasciencecoursera/corr.R')
corr("specdata")
source('C:/Users/ypark/dataScience/datasciencecoursera/corr.R')
corr("specdata")
source('C:/Users/ypark/dataScience/datasciencecoursera/corr.R')
corr("specdata")
corr("specdata",150)
source('C:/Users/ypark/dataScience/datasciencecoursera/corr.R')
corr("specdata",150)
?cor
source('C:/Users/ypark/dataScience/datasciencecoursera/corr.R')
corr("specdata",150)
cr<-corr("specdata",150)
head(cr)
summary(cr)
cr<-corr("specdata")
cr<-sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4)
)
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
library(swirl)
swirl()
quit()
